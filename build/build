#! /usr/bin/env bash

################################################################################
# Some helper functions.
################################################################################

program_dir=$(dirname "$0") || panic "cannot determine directory name"
source "$program_dir/utilities" || exit 1

# Terminate with error.
panic()
{
	echo "ERROR: $@" 1>&2
	exit 1
}

# Print usage information.
usage()
{
	echo "bad usage: $@"
	cat <<- EOF
	build - Build the document.

	Usage
	=====

	$0 -d \$install_dir -z \$github_ref

	Options
	=======

	-d \$install_dir
	Set the installation directory for the built release to \$install_dir.

	-z \$github_ref
	Set the GitHub ref to $\github_ref.
	(This is used to determine the version of the document being released.)

	Examples
	========

	$0 -d /tmp/install -z refs/tags/v0.0.1
	$0 -d /tmp/install -z refs/heads/main
	EOF
	exit 2
}

################################################################################
# Perform some basic initialization.
################################################################################

top_dir="$program_dir/.."
source_dir="$top_dir/src"

################################################################################
# Parse command line.
################################################################################

install_dir=
github_ref=
spellcheck=0

while getopts d:z:s opt; do
	case $opt in
	d)
		install_dir="$OPTARG";;
	z)
		github_ref="$OPTARG";;
	s)
		spellcheck=1;;
	\?)
		usage
		break;;
	esac
done
shift $((OPTIND - 1))

if [ -z "$install_dir" ]; then
	usage "no output directory specified"
fi
if [ -z "$github_ref" ]; then
	usage "no github ref specified"
fi

################################################################################
# Build the document.
################################################################################

#version="$(github_ref_to_version "$github_ref")" || \
#  panic "cannot determine document version"
#ref_type="$(github_ref_type "$github_ref")" || \
#  panic "cannot determine ref type"

doc_version="$(get_build_info doc_version "$github_ref")" || \
  panic "cannot get document version"
ghp_name="$(get_build_info ghp_name "$github_ref")" || \
  panic "cannot get GHP name"

if [ ! -d "$install_dir" ]; then
	mkdir -p "$install_dir" || \
	  panic "cannot make installation directory $install_dir"
fi

(cd "$source_dir" && make clean) || \
  panic "cannot make clean"

make_options=()
make_options+=(GHP_NAME="$ghp_name")
make_options+=(DOC_VERSION="$doc_version")
make_options+=(DOC_SPELLCHECK_MUST_PASS="$spellcheck")

echo "GHP_NAME=$ghp_name"
echo "DOC_VERSION=$doc_version"
if [ "$spellcheck" -ne 0 ]; then
	echo "spellchecking is enabled"
fi

(cd "$source_dir" && \
  make "${make_options[@]}" all) || \
  panic "cannot build document"

make INSTALL_DIR="$install_dir" install || \
  panic "cannot install release"
